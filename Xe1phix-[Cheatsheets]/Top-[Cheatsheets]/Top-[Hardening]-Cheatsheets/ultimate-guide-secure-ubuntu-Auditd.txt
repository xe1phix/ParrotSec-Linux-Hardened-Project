6. Logging and Auditing

By using a powerful audit framework, the system can track many event types to monitor and audit the system.
Install auditd using following command

    sudo apt-get install auditd audispd-plugins

If needed create proper start links for auditd in /etc/rc*.d by running the following command from each of the relevant directories:

    # ln -s /etc/init.d/auditd S37auditd

Start links should be created for run levels
6.1 Configure Audit Log Storage Size

The audit log file size should be chosen carefully so that it does not effect the system and no audit data is lost.
Set the max_log_file parameter in /etc/audit/auditd.conf

    max_log_file = <MB>

6.2 Disable System on Audit Log Full

The auditd daemon can be configured to halt the system when the audit logs are full. Perform the following to determine if auditd is configured to notify the administrator and halt the system when audit logs are full.

    space_left_action = email
    action_mail_acct = root
    admin_space_left_action = halt

6.3 Keep All Auditing Information

In high security contexts, the benefits of maintaining a long audit history exceed the cost of storing the audit history. Add the following line to the /etc/audit/auditd.conf file.

    max_log_file_action = keep_logs

6.4 Record Events That Modify Date and Time Information

To monitor unusual changes in system date and/or time which is an indication of unauthorized activity on the system.
For 64 bit systems, add the following lines to the /etc/audit/audit.rules file.

    -a always,exit -F arch=b64 -S adjtimex -S settimeofday -k time-change
    -a always,exit -F arch=b32 -S adjtimex -S settimeofday -S stime -k time-change
    -a always,exit -F arch=b64 -S clock_settime -k time-change
    -a always,exit -F arch=b32 -S clock_settime -k time-change -w /etc/localtime -p wa -k time-change

# Execute the following command to restart auditd

    # sudo service auditd restart

For 32 bit systems, add the following lines to the /etc/audit/audit.rules file.

    -a always,exit -F arch=b32 -S adjtimex -S settimeofday -S stime -k time-change
    -a always,exit -F arch=b32 -S clock_settime -k time-change -w /etc/localtime -p wa -k time-change

# Execute the following command to restart auditd

    # sudo service auditd restart

6.6 Record Events That Modify User/Group Information

Unexpected changes to /etc/group, /etc/passwd, /etc/gshadow, /etc/shadow, /etc/security/opasswd is clear indication of unauthorized user is trying to hide their activities or compromise additional accounts.
Add the following lines to the /etc/audit/audit.rules file.

    -w /etc/group -p wa -k identity
    -w /etc/passwd -p wa -k identity
    -w /etc/gshadow -p wa -k identity
    -w /etc/shadow -p wa -k identity
    -w /etc/security/opasswd -p wa -k identity

# Execute the following command to restart auditd

    # sudo service auditd restart

6.7 Record Events That Modify the System's Network Environment

To prevent unauthorized changes to host and domain-name of a system to break security parameters that are set based on those names, add the following lines in /etc/audit/audit.rules
For 64 bit systems, add the following lines to the /etc/audit/audit.rules file.

    -a exit,always -F arch=b64 -S sethostname -S setdomainname -k system-locale
    -a exit,always -F arch=b32 -S sethostname -S setdomainname -k system-locale
    -w /etc/issue -p wa -k system-locale -w /etc/issue.net -p wa -k system-locale
    -w /etc/hosts -p wa -k system-locale -w /etc/network -p wa -k system-locale

# Execute the following command to restart auditd

    # sudo service auditd restart

For 32 bit systems, add the following lines to the /etc/audit/audit.rules file.

    -a exit,always -F arch=b32 -S sethostname -S setdomainname -k system-locale
    -w /etc/issue -p wa -k system-locale -w /etc/issue.net -p wa -k system-locale
    -w /etc/hosts -p wa -k system-locale -w /etc/network -p wa -k system-locale

# Execute the following command to restart auditd

    # sudo service auditd restart

6.8 Record Events That Modify the System's Mandatory Access Controls

Any changes to files in /etc/selinux is an indication of unauthorized user is attempting to modify access controls and change security contexts to gain access to the system.
Add the following lines to /etc/audit/audit.rules

    -w /etc/selinux/ -p wa -k MAC-policy

# Execute the following command to restart auditd

    # sudo service auditd restart

6.9 Collect Login and Logout Events

To monitor information related to login/logout/brute force attacks add the following lines to the /etc/audit/audit.rules file.

    -w /var/log/faillog -p wa -k logins
    -w /var/log/lastlog -p wa -k logins
    -w /var/log/tallylog -p wa -k logins

# Execute the following command to restart auditd

    # sudo service auditd restart

6.10 Collect Session Initiation Information

Monitor session initiation events. A system administrator can monitor logins occurring at unusual time, which could indicate an unauthorized activity.
Add the following lines to the /etc/audit/audit.rules file.

    -w /var/run/utmp -p wa -k session
    -w /var/log/wtmp -p wa -k session
    -w /var/log/btmp -p wa -k session

# Execute the following command to restart auditd

    # sudo service auditd restart

6.11 Collect Discretionary Access Control Permission Modification Events

Find changes in file attributes which is an indication of intruder activity.
For 64 bit systems, add the following lines to the /etc/audit/audit.rules file.

    -a always,exit -F arch=b64 -S chmod -S fchmod -S fchmodat -F auid>=500 -F auid!=4294967295 -k perm_mod
    -a always,exit -F arch=b32 -S chmod -S fchmod -S fchmodat -F auid>=500 -F auid!=4294967295 -k perm_mod
    -a always,exit -F arch=b64 -S chown -S fchown -S fchownat -S lchown -F auid>=500 -F auid!=4294967295 -k perm_mod
    -a always,exit -F arch=b32 -S chown -S fchown -S fchownat -S lchown -F auid>=500 -F auid!=4294967295 -k perm_mod
    -a always,exit -F arch=b64 -S setxattr -S lsetxattr -S fsetxattr -S removexattr -S lremovexattr -S fremovexattr -F auid>=500 -F auid!=4294967295 -k perm_mod
    -a always,exit -F arch=b32 -S setxattr -S lsetxattr -S fsetxattr -S removexattr -S lremovexattr -S fremovexattr -F auid>=500 -F auid!=4294967295 -k perm_mod

# Execute the following command to restart auditd

    # sudo service auditd restart

For 32 bit systems, add the following lines to the /etc/audit/audit.rules file.

    -a always,exit -F arch=b32 -S chmod -S fchmod -S fchmodat -F auid>=500 -F auid!=4294967295 -k perm_mod
    -a always,exit -F arch=b32 -S chown -S fchown -S fchownat -S lchown -F auid>=500 -F auid!=4294967295 -k perm_mod
    -a always,exit -F arch=b32 -S setxattr -S lsetxattr -S fsetxattr -S removexattr -S lremovexattr -S fremovexattr -F auid>=500 -F auid!=4294967295 -k perm_mod

# Execute the following command to restart auditd

    # sudo service auditd restart

6.12 Collect Unsuccessful Unauthorized Access Attempts to Files

Find failed attempts to open, create or truncate files to gain unauthorized access to the system.
For 64 bit systems, add the following lines to the /etc/audit/audit.rules file.

    -a always,exit -F arch=b64 -S creat -S open -S openat -S truncate -S ftruncate -F exit=-EACCES -F auid>=500 -F auid!=4294967295 -k access
    -a always,exit -F arch=b32 -S creat -S open -S openat -S truncate -S ftruncate -F exit=-EACCES -F auid>=500 -F auid!=4294967295 -k access
    -a always,exit -F arch=b64 -S creat -S open -S openat -S truncate -S ftruncate -F exit=-EPERM -F auid>=500 -F auid!=4294967295 -k access
    -a always,exit -F arch=b32 -S creat -S open -S openat -S truncate -S ftruncate -F exit=-EPERM -F auid>=500 -F auid!=4294967295 -k access

# Execute the following command to restart auditd

    # sudo service auditd restart

For 32 bit systems, add the following lines to the /etc/audit/audit.rules file.

    -a always,exit -F arch=b32 -S creat -S open -S openat -S truncate -S ftruncate -F exit=-EACCES -F auid>=500 -F auid!=4294967295 -k access
    -a always,exit -F arch=b32 -S creat -S open -S openat -S truncate -S ftruncate -F exit=-EPERM -F auid>=500 -F auid!=4294967295 -k access

# Execute the following command to restart auditd

    # sudo service auditd restart

6.13 Collect Use of Privileged Commands

Find out if there is any uses of privileged commands by non-privileged users to gain access to the system. First execute the following comand then add the output of the following command to /etc/audit/audit.rules file

    # find PART -xdev \( -perm -4000 -o -perm -2000 \) -type f | awk '{print \ "-a always,exit -F path=" $1 " -F perm=x -F auid>=500 -F auid!=4294967295 \ -k privileged" }'

6.14 Collect Unsuccessful File System Mounts

To track mounting of the file systems by non privileged user add the following rules in /etc/audit/audit.rules file
For 64 bit systems, add the following lines to the /etc/audit/audit.rules file.

    -a always,exit -F arch=b64 -S mount -F auid>=500 -F auid!=4294967295 -k mounts
    -a always,exit -F arch=b32 -S mount -F auid>=500 -F auid!=4294967295 -k mounts

# Execute the following command to restart auditd

    # sudo service auditd restart

For 32 bit systems, add the following lines to the /etc/audit/audit.rules file.

    -a always,exit -F arch=b32 -S mount -F auid>=500 -F auid!=4294967295 -k mounts

# Execute the following command to restart auditd

    # sudo service auditd restart

6.15 Collect File Deletion Events by User

To find out if any removal of files and file attributes associated with protected files is occurring add the following rules.
For 64 bit systems, add the following to the /etc/audit/audit.rules file.

    -a always,exit -F arch=b64 -S unlink -S unlinkat -S rename -S renameat -F auid>=500 -F auid!=4294967295 -k delete
    -a always,exit -F arch=b32 -S unlink -S unlinkat -S rename -S renameat -F auid>=500 -F auid!=4294967295 -k delete

Execute the following command to restart auditd

    # sudo service auditd restart

For 32 bit systems, add the following to the /etc/audit/audit.rules file.

    -a always,exit -F arch=b32 -S unlink -S unlinkat -S rename -S renameat -F auid>=500 -F auid!=4294967295 -k delete

# Execute the following command to restart auditd

    # sudo service auditd restart

6.16 Collect Changes to System Administration Scope

Changes in the /etc/sudoers file can indicate that an unauthorized change has been made to scope of system administrator activity.

Add the following lines to the /etc/audit/audit.rules file.

    -w /etc/sudoers -p wa -k scope

# Execute the following command to restart auditd

    # sudo service auditd restart

6.17 Collect System Administrator Actions (sudolog)

To prevent unauthorized users from using privileged command, find out if any changes takes place in /var/log/sudo.log.
Add the following lines to the /etc/audit/audit.rules file.

    -w /var/log/sudo.log -p wa -k actions

Restart auditd

    # sudo service auditd restart

6.18 Collect Kernel Module Loading and Unloading

To find out if any unauthorized user is using insmod, rmmod and modprobe and thus compromising the security of the system, Add the following lines to the /etc/audit/audit.rules file.

    -w /sbin/insmod -p x -k modules
    -w /sbin/rmmod -p x -k modules
    -w /sbin/modprobe -p x -k modules

For 32 bit systems, add

    -a always,exit -F arch=b32 -S init_module -S delete_module -k modules

For 64 bit systems, add

    -a always,exit -F arch=b64 -S init_module -S delete_module -k modules

Restart auditd

    # sudo service auditd restart

6.19 Make the Audit Configuration Immutable

To prevent unauthorized users to make changes to the audit system to hide their malicious activity and then revert the audit rules back, add the following lines to the

/etc/audit/audit.rules file.

    -e 2

This must be the last line in the /etc/audit/audit.rules file
Restart auditd

    # sudo service auditd restart
